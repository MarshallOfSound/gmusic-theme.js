{"version":3,"sources":["../src/gmusic-theme.js"],"names":[],"mappings":"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","file":"gmusic-theme.js","sourcesContent":["const color = require('color');\r\nconst fs = require('fs');\r\n\r\n// DEV: These constants will be transformed into string constants by browserify\r\nconst COMMON_CSS = fs.readFileSync(__dirname + '/../build/common.css', 'utf8');\r\nconst HIGHLIGHT_CSS = fs.readFileSync(__dirname + '/../build/highlight.css', 'utf8');\r\nconst FULL_CSS = fs.readFileSync(__dirname + '/../build/full.css', 'utf8');\r\nconst BASE_SVG = fs.readFileSync(__dirname + '/../lib/logo.svg', 'utf8');\r\nconst CONSTANTS = require('../lib/_constants');\r\n\r\nconst DEFAULTS = {\r\n  BACK_PRIMARY: '#222326',\r\n  BACK_SECONDARY: '#121314',\r\n  BACK_HIGHLIGHT: '#615F59', // #1a1b1d\r\n  FORE_PRIMARY: '#FFFFFF',\r\n  FORE_SECONDARY: '#FF5722',\r\n};\r\n\r\nclass GMusicTheme {\r\n  static TYPES = {\r\n    FULL: 'FULL',\r\n    HIGHLIGHT_ONLY: 'HIGHLIGHT_ONLY',\r\n  };\r\n\r\n  /**\r\n   * Constructor for a new Google Music Theme API.\r\n   *\r\n   * @param  {Object} - A colors object containing `backPrimary`, `backSecondary`,\r\n   *                    `backHighlight`, `forePrimary`, `foreSecondary` attributes\r\n   *                    any attribute not included will not be overriden\r\n   */\r\n  constructor(options = {}) {\r\n    // DEV: Use the colors specified in the options or the default if it isn't set\r\n    this.BACK_PRIMARY = DEFAULTS.BACK_PRIMARY;\r\n    this.BACK_SECONDARY = DEFAULTS.BACK_SECONDARY;\r\n    this.BACK_HIGHLIGHT = DEFAULTS.BACK_HIGHLIGHT;\r\n    this.FORE_PRIMARY = DEFAULTS.FORE_PRIMARY;\r\n    this.FORE_SECONDARY = DEFAULTS.FORE_SECONDARY;\r\n    this.enabled = options.enabled || false;\r\n    this.type = GMusicTheme.TYPES.FULL;\r\n\r\n    // DEV: This is the style element where we put our custom CSS\r\n    this.styleElement = document.createElement('style');\r\n    document.body.appendChild(this.styleElement);\r\n\r\n    // DEV: updateTheme calls redrawTheme\r\n    this.updateTheme(options);\r\n  }\r\n\r\n  /**\r\n   * Regenerates the custom CSS and and updates the SVG logo\r\n   */\r\n  redrawTheme() {\r\n    this._refreshStyleSheet();\r\n    this._drawLogo();\r\n\r\n    // DEV: Add / Remove appropriate classes\r\n    if (this.enabled) {\r\n      document.documentElement.classList.add(CONSTANTS.CLASS_NAMESPACE);\r\n    } else {\r\n      document.documentElement.classList.remove(CONSTANTS.CLASS_NAMESPACE);\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Enabled the custom theme\r\n  */\r\n  enable() {\r\n    this.enabled = true;\r\n    this.redrawTheme();\r\n  }\r\n\r\n  /**\r\n   * Disables the custom theme\r\n   */\r\n  disable() {\r\n    this.enabled = false;\r\n    this.redrawTheme();\r\n  }\r\n\r\n  /**\r\n   * Updates the custom colors used in the theme and redraws the custom CSS\r\n   *\r\n   * @param  {Object} - A colors object containing `backPrimary`, `backSecondary`,\r\n   *                    `backHighlight`, `forePrimary`, `foreSecondary` attributes\r\n   *                    any attribute not included will not be overriden\r\n   */\r\n  updateTheme(colorObject) {\r\n    // DEV: Validate the updateTheme type\r\n    if (colorObject.type !== undefined && GMusicTheme.TYPES[colorObject.type] === undefined) {\r\n      const validTypesStr = JSON.stringify(Object.keys(GMusicTheme.TYPES));\r\n      throw new Error(`\\`updateTheme\\` expected \\`colorObject.type\\` to be in ${validTypesStr}\r\n        but it was \"${colorObject.type}\"`);\r\n    }\r\n    this.BACK_PRIMARY = colorObject.backPrimary || this.BACK_PRIMARY;\r\n    this.BACK_SECONDARY = colorObject.backSecondary || this.BACK_SECONDARY;\r\n    this.BACK_HIGHLIGHT = colorObject.backHighlight || this.BACK_HIGHLIGHT;\r\n    this.FORE_PRIMARY = colorObject.forePrimary || this.FORE_PRIMARY;\r\n    this.FORE_SECONDARY = colorObject.foreSecondary || this.FORE_SECONDARY;\r\n    this.type = colorObject.type || this.type;\r\n    this.redrawTheme();\r\n  }\r\n\r\n  _drawLogo() {\r\n    const logo = document.querySelectorAll('.menu-logo')[0];\r\n    const normalSVG = BASE_SVG;\r\n    const customSVG = normalSVG.replace('#EE6B00', this.FORE_SECONDARY).replace('id=\"normalSVGIcon\"', 'id=\"customSVGIcon\"');\r\n    let parent;\r\n    let tmpSVG;\r\n\r\n    if (logo) {\r\n      parent = logo.parentNode;\r\n      if (this.logoObserver) {\r\n        this.logoObserver.disconnect();\r\n        delete this.logoObserver;\r\n      }\r\n\r\n      if (this.enabled) {\r\n        // DEV: Only update the SVG element if we need to\r\n        if (logo.nodeName === 'IMG' || logo.id === 'normalSVGIcon' || logo.getAttribute('current-custom') !== this.FORE_SECONDARY) {\r\n          parent.removeChild(logo);\r\n          tmpSVG = (new DOMParser()).parseFromString(customSVG, 'text/xml').firstChild;\r\n          tmpSVG.setAttribute('current-custom', this.FORE_SECONDARY);\r\n          parent.appendChild(tmpSVG);\r\n        }\r\n      } else {\r\n        // DEV: Only update the SVG element if we need to\r\n        if (logo.nodeName === 'IMG' || logo.id === 'customSVGIcon') {\r\n          parent.removeChild(logo);\r\n          parent.appendChild((new DOMParser()).parseFromString(normalSVG, 'text/xml').firstChild);\r\n        }\r\n      }\r\n\r\n      // DEV: Google sometimes changes its logo by itself, we need to monitor this\r\n      this.logoObserver = new MutationObserver(() => {\r\n        this._drawLogo();\r\n      });\r\n      this.logoObserver.observe(parent, {\r\n        childList: true,\r\n        attributes: true,\r\n        subtree: true,\r\n      });\r\n    } else {\r\n      // DEV: If the logo isn't ready yet wait a few milliseconds and try again\r\n      setTimeout(this._drawLogo, 10);\r\n    }\r\n  }\r\n\r\n  _refreshStyleSheet() {\r\n    // DEV: Take the current style string and put it in the style element in the DOM)\r\n    let styles = COMMON_CSS;\r\n    switch (this.type) {\r\n      case GMusicTheme.TYPES.FULL:\r\n        styles += FULL_CSS;\r\n        break;\r\n      case GMusicTheme.TYPES.HIGHLIGHT_ONLY:\r\n        styles += HIGHLIGHT_CSS;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.styleElement.innerHTML = this._substituteColors(styles);\r\n  }\r\n\r\n  _rgba(colorCode, opacity) {\r\n    return color(colorCode).clearer(opacity).rgbString();\r\n  }\r\n\r\n  _darken(colorCode, percentage) {\r\n    return color(colorCode).darken(percentage).rgbString();\r\n  }\r\n\r\n  _inverse(colorCode) {\r\n    const rgb = color(colorCode).rgb();\r\n    return color({\r\n      r: 255 - rgb.r,\r\n      g: 255 - rgb.g,\r\n      b: 255 - rgb.b,\r\n    }).rgbString();\r\n  }\r\n\r\n  _substituteColors(styleString) {\r\n    return styleString\r\n      .replace(/<<BACK_PRIMARY>>/g, this.BACK_PRIMARY)\r\n      .replace(/<<BACK_SECONDARY>>/g, this.BACK_SECONDARY)\r\n      .replace(/<<BACK_HIGHLIGHT>>/g, this.BACK_HIGHLIGHT)\r\n      .replace(/<<FORE_PRIMARY>>/g, this.FORE_PRIMARY)\r\n      .replace(/<<FORE_SECONDARY>>/g, this.FORE_SECONDARY)\r\n      .replace(/<<INVERSE>>(.+?)<<\\/INVERSE>>/g, (s, colorString) => this._inverse(colorString))\r\n      .replace(/<<DARKEN ([01]+.?[0-9]*)>>(.+?)<<\\/DARKEN>>/g, (s, n, colorString) => this._darken(colorString, parseFloat(n)))\r\n      .replace(/<<ALPHA ([01]+.?[0-9]*)>>(.+?)<<\\/ALPHA>>/g, (s, n, colorString) => this._rgba(colorString, parseFloat(n)))\r\n      .replace(/<<NOTIMPORTANT>> \\!important/g, '');\r\n  }\r\n}\r\n\r\nwindow.GMusicTheme = GMusicTheme;\r\n"]}