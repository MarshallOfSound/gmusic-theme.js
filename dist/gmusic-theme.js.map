{"version":3,"sources":["../src/gmusic-theme.js"],"names":[],"mappings":"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","file":"gmusic-theme.js","sourcesContent":["const color = require('color');\nconst fs = require('fs');\n\n// DEV: These constants will be transformed into string constants by browserify\nconst COMMON_CSS = fs.readFileSync(__dirname + '/../build/common.css', 'utf8');\nconst HIGHLIGHT_CSS = fs.readFileSync(__dirname + '/../build/highlight.css', 'utf8');\nconst FULL_CSS = fs.readFileSync(__dirname + '/../build/full.css', 'utf8');\nconst BASE_SVG = fs.readFileSync(__dirname + '/../lib/logo.svg', 'utf8');\nconst CONSTANTS = require('../lib/_constants');\n\nconst DEFAULTS = {\n  BACK_PRIMARY: '#222326',\n  BACK_SECONDARY: '#121314',\n  BACK_HIGHLIGHT: '#615F59', // #1a1b1d\n  FORE_PRIMARY: '#FFFFFF',\n  FORE_SECONDARY: '#FF5722',\n};\n\nclass GMusicTheme {\n  static TYPES = {\n    FULL: 'FULL',\n    HIGHLIGHT_ONLY: 'HIGHLIGHT_ONLY',\n  };\n\n  /**\n   * Constructor for a new Google Music Theme API.\n   *\n   * @param  {Object} - A colors object containing `backPrimary`, `backSecondary`,\n   *                    `backHighlight`, `forePrimary`, `foreSecondary` attributes\n   *                    any attribute not included will not be overriden\n   */\n  constructor(options = {}) {\n    // DEV: Use the colors specified in the options or the default if it isn't set\n    this.BACK_PRIMARY = DEFAULTS.BACK_PRIMARY;\n    this.BACK_SECONDARY = DEFAULTS.BACK_SECONDARY;\n    this.BACK_HIGHLIGHT = DEFAULTS.BACK_HIGHLIGHT;\n    this.FORE_PRIMARY = DEFAULTS.FORE_PRIMARY;\n    this.FORE_SECONDARY = DEFAULTS.FORE_SECONDARY;\n    this.enabled = options.enabled || false;\n    this.type = GMusicTheme.TYPES.FULL;\n\n    // DEV: This is the style element where we put our custom CSS\n    this.styleElement = document.createElement('style');\n    document.body.appendChild(this.styleElement);\n\n    // DEV: updateTheme calls redrawTheme\n    this.updateTheme(options);\n  }\n\n  /**\n   * Regenerates the custom CSS and and updates the SVG logo\n   */\n  redrawTheme() {\n    this._refreshStyleSheet();\n    this._drawLogo();\n\n    // DEV: Add / Remove appropriate classes\n    if (this.enabled) {\n      document.documentElement.classList.add(CONSTANTS.CLASS_NAMESPACE);\n    } else {\n      document.documentElement.classList.remove(CONSTANTS.CLASS_NAMESPACE);\n    }\n  }\n\n  /**\n  * Enabled the custom theme\n  */\n  enable() {\n    this.enabled = true;\n    this.redrawTheme();\n  }\n\n  /**\n   * Disables the custom theme\n   */\n  disable() {\n    this.enabled = false;\n    this.redrawTheme();\n  }\n\n  /**\n   * Updates the custom colors used in the theme and redraws the custom CSS\n   *\n   * @param  {Object} - A colors object containing `backPrimary`, `backSecondary`,\n   *                    `backHighlight`, `forePrimary`, `foreSecondary` attributes\n   *                    any attribute not included will not be overriden\n   */\n  updateTheme(colorObject) {\n    // DEV: Validate the updateTheme type\n    if (colorObject.type !== undefined && GMusicTheme.TYPES[colorObject.type] === undefined) {\n      const validTypesStr = JSON.stringify(Object.keys(GMusicTheme.TYPES));\n      throw new Error(`\\`updateTheme\\` expected \\`colorObject.type\\` to be in ${validTypesStr}\n        but it was \"${colorObject.type}\"`);\n    }\n    this.BACK_PRIMARY = colorObject.backPrimary || this.BACK_PRIMARY;\n    this.BACK_SECONDARY = colorObject.backSecondary || this.BACK_SECONDARY;\n    this.BACK_HIGHLIGHT = colorObject.backHighlight || this.BACK_HIGHLIGHT;\n    this.FORE_PRIMARY = colorObject.forePrimary || this.FORE_PRIMARY;\n    this.FORE_SECONDARY = colorObject.foreSecondary || this.FORE_SECONDARY;\n    this.type = colorObject.type || this.type;\n    this.redrawTheme();\n  }\n\n  _drawLogo() {\n    const logo = document.querySelectorAll('.menu-logo')[0];\n    const normalSVG = BASE_SVG;\n    const customSVG = normalSVG.replace('#EE6B00', this.FORE_SECONDARY).replace('id=\"normalSVGIcon\"', 'id=\"customSVGIcon\"');\n    let parent;\n    let tmpSVG;\n\n    if (logo) {\n      parent = logo.parentNode;\n      if (this.logoObserver) {\n        this.logoObserver.disconnect();\n        delete this.logoObserver;\n      }\n\n      if (this.enabled) {\n        // DEV: Only update the SVG element if we need to\n        if (logo.nodeName === 'IMG' || logo.id === 'normalSVGIcon' || logo.getAttribute('current-custom') !== this.FORE_SECONDARY) {\n          parent.removeChild(logo);\n          tmpSVG = (new DOMParser()).parseFromString(customSVG, 'text/xml').firstChild;\n          tmpSVG.setAttribute('current-custom', this.FORE_SECONDARY);\n          parent.appendChild(tmpSVG);\n        }\n      } else {\n        // DEV: Only update the SVG element if we need to\n        if (logo.nodeName === 'IMG' || logo.id === 'customSVGIcon') {\n          parent.removeChild(logo);\n          parent.appendChild((new DOMParser()).parseFromString(normalSVG, 'text/xml').firstChild);\n        }\n      }\n\n      // DEV: Google sometimes changes its logo by itself, we need to monitor this\n      this.logoObserver = new MutationObserver(() => {\n        this._drawLogo();\n      });\n      this.logoObserver.observe(parent, {\n        childList: true,\n        attributes: true,\n        subtree: true,\n      });\n    } else {\n      // DEV: If the logo isn't ready yet wait a few milliseconds and try again\n      setTimeout(this._drawLogo, 10);\n    }\n  }\n\n  _refreshStyleSheet() {\n    // DEV: Take the current style string and put it in the style element in the DOM)\n    let styles = COMMON_CSS;\n    switch (this.type) {\n      case GMusicTheme.TYPES.FULL:\n        styles += FULL_CSS;\n        break;\n      case GMusicTheme.TYPES.HIGHLIGHT_ONLY:\n        styles += HIGHLIGHT_CSS;\n        break;\n      default:\n        break;\n    }\n    this.styleElement.innerHTML = this._substituteColors(styles);\n  }\n\n  _rgba(colorCode, opacity) {\n    return color(colorCode).clearer(opacity).rgbString();\n  }\n\n  _darken(colorCode, percentage) {\n    return color(colorCode).darken(percentage).rgbString();\n  }\n\n  _inverse(colorCode) {\n    const rgb = color(colorCode).rgb();\n    return color({\n      r: 255 - rgb.r,\n      g: 255 - rgb.g,\n      b: 255 - rgb.b,\n    }).rgbString();\n  }\n\n  _substituteColors(styleString) {\n    return styleString\n      .replace(/<<BACK_PRIMARY>>/g, this.BACK_PRIMARY)\n      .replace(/<<BACK_SECONDARY>>/g, this.BACK_SECONDARY)\n      .replace(/<<BACK_HIGHLIGHT>>/g, this.BACK_HIGHLIGHT)\n      .replace(/<<FORE_PRIMARY>>/g, this.FORE_PRIMARY)\n      .replace(/<<FORE_PRIMARY_MUTED>>/g, this._darken(this.FORE_PRIMARY, 0.4))\n      .replace(/<<FORE_SECONDARY>>/g, this.FORE_SECONDARY)\n      .replace(/<<BACK_SECONDARY_O>>/g, this._rgba(this.BACK_SECONDARY, 0.5))\n      .replace(/<<INVERSE>>(.+?)<<\\/INVERSE>>/g, (s, colorString) => this._inverse(colorString))\n      .replace(/<<NOTIMPORTANT>> \\!important/g, '');\n  }\n}\n\nwindow.GMusicTheme = GMusicTheme;\n"]}