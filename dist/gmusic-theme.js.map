{"version":3,"sources":["../src/gmusic-theme.js"],"names":["fs","require","COMMON_CSS","readFileSync","__dirname","HIGHLIGHT_CSS","FULL_CSS","BASE_SVG","CONSTANTS","DEFAULTS","BACK_PRIMARY","BACK_SECONDARY","BACK_HIGHLIGHT","FORE_PRIMARY","FORE_SECONDARY","GMusicTheme","options","enabled","type","TYPES","FULL","styleElement","document","createElement","body","appendChild","updateTheme","_refreshStyleSheet","_drawLogo","documentElement","classList","add","CLASS_NAMESPACE","remove","redrawTheme","colorObject","undefined","validTypesStr","JSON","stringify","Object","keys","Error","backPrimary","backSecondary","backHighlight","forePrimary","foreSecondary","logo","querySelectorAll","normalSVG","customSVG","replace","parent","tmpSVG","parentNode","logoObserver","disconnect","nodeName","id","getAttribute","removeChild","DOMParser","parseFromString","firstChild","setAttribute","MutationObserver","observe","childList","attributes","subtree","setTimeout","styles","HIGHLIGHT_ONLY","innerHTML","substituteColors","colorCode","opacity","clearer","rgbString","percentage","darken","rgb","r","g","b","styleString","s","n","colorString","_darken","parseFloat","_rgba","_inverse","module","exports"],"mappings":";;;;AAAA;;;;;;;;AAEA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;;AAEA;AACA,IAAMC,aAAaF,GAAGG,YAAH,CAAmBC,SAAnB,2BAAoD,MAApD,CAAnB;AACA,IAAMC,gBAAgBL,GAAGG,YAAH,CAAmBC,SAAnB,8BAAuD,MAAvD,CAAtB;AACA,IAAME,WAAWN,GAAGG,YAAH,CAAmBC,SAAnB,yBAAkD,MAAlD,CAAjB;AACA,IAAMG,WAAWP,GAAGG,YAAH,CAAmBC,SAAnB,uBAAgD,MAAhD,CAAjB;AACA,IAAMI,YAAYP,QAAQ,mBAAR,CAAlB;;AAEA,IAAMQ,WAAW;AACfC,gBAAc,SADC;AAEfC,kBAAgB,SAFD;AAGfC,kBAAgB,SAHD,EAGY;AAC3BC,gBAAc,SAJC;AAKfC,kBAAgB;AALD,CAAjB;;IAQMC,W;;AAMJ;;;;;;;AAOA,yBAA0B;AAAA,QAAdC,OAAc,yDAAJ,EAAI;;AAAA;;AACxB;AACA,SAAKN,YAAL,GAAoBD,SAASC,YAA7B;AACA,SAAKC,cAAL,GAAsBF,SAASE,cAA/B;AACA,SAAKC,cAAL,GAAsBH,SAASG,cAA/B;AACA,SAAKC,YAAL,GAAoBJ,SAASI,YAA7B;AACA,SAAKC,cAAL,GAAsBL,SAASK,cAA/B;AACA,SAAKG,OAAL,GAAeD,QAAQC,OAAR,IAAmB,KAAlC;AACA,SAAKC,IAAL,GAAYH,YAAYI,KAAZ,CAAkBC,IAA9B;;AAEA;AACA,SAAKC,YAAL,GAAoBC,SAASC,aAAT,CAAuB,OAAvB,CAApB;AACAD,aAASE,IAAT,CAAcC,WAAd,CAA0B,KAAKJ,YAA/B;;AAEA;AACA,SAAKK,WAAL,CAAiBV,OAAjB;AACD;;AAED;;;;;;;kCAGc;AACZ,WAAKW,kBAAL;AACA,WAAKC,SAAL;;AAEA;AACA,UAAI,KAAKX,OAAT,EAAkB;AAChBK,iBAASO,eAAT,CAAyBC,SAAzB,CAAmCC,GAAnC,CAAuCvB,UAAUwB,eAAjD;AACD,OAFD,MAEO;AACLV,iBAASO,eAAT,CAAyBC,SAAzB,CAAmCG,MAAnC,CAA0CzB,UAAUwB,eAApD;AACD;AACF;;AAED;;;;;;6BAGS;AACP,WAAKf,OAAL,GAAe,IAAf;AACA,WAAKiB,WAAL;AACD;;AAED;;;;;;8BAGU;AACR,WAAKjB,OAAL,GAAe,KAAf;AACA,WAAKiB,WAAL;AACD;;AAED;;;;;;;;;;gCAOYC,W,EAAa;AACvB;AACA,UAAIA,YAAYjB,IAAZ,KAAqBkB,SAArB,IAAkCrB,YAAYI,KAAZ,CAAkBgB,YAAYjB,IAA9B,MAAwCkB,SAA9E,EAAyF;AACvF,YAAMC,gBAAgBC,KAAKC,SAAL,CAAeC,OAAOC,IAAP,CAAY1B,YAAYI,KAAxB,CAAf,CAAtB;AACA,cAAM,IAAIuB,KAAJ,yDAAoEL,aAApE,8BACUF,YAAYjB,IADtB,OAAN;AAED;AACD,WAAKR,YAAL,GAAoByB,YAAYQ,WAAZ,IAA2B,KAAKjC,YAApD;AACA,WAAKC,cAAL,GAAsBwB,YAAYS,aAAZ,IAA6B,KAAKjC,cAAxD;AACA,WAAKC,cAAL,GAAsBuB,YAAYU,aAAZ,IAA6B,KAAKjC,cAAxD;AACA,WAAKC,YAAL,GAAoBsB,YAAYW,WAAZ,IAA2B,KAAKjC,YAApD;AACA,WAAKC,cAAL,GAAsBqB,YAAYY,aAAZ,IAA6B,KAAKjC,cAAxD;AACA,WAAKI,IAAL,GAAYiB,YAAYjB,IAAZ,IAAoB,KAAKA,IAArC;AACA,WAAKgB,WAAL;AACD;;;gCAEW;AAAA;;AACV,UAAMc,OAAO1B,SAAS2B,gBAAT,CAA0B,YAA1B,EAAwC,CAAxC,CAAb;AACA,UAAMC,YAAY3C,QAAlB;AACA,UAAM4C,YAAYD,UAAUE,OAAV,CAAkB,SAAlB,EAA6B,KAAKtC,cAAlC,EAAkDsC,OAAlD,CAA0D,oBAA1D,EAAgF,oBAAhF,CAAlB;AACA,UAAIC,eAAJ;AACA,UAAIC,eAAJ;;AAEA,UAAIN,IAAJ,EAAU;AACRK,iBAASL,KAAKO,UAAd;AACA,YAAI,KAAKC,YAAT,EAAuB;AACrB,eAAKA,YAAL,CAAkBC,UAAlB;AACA,iBAAO,KAAKD,YAAZ;AACD;;AAED,YAAI,KAAKvC,OAAT,EAAkB;AAChB;AACA,cAAI+B,KAAKU,QAAL,KAAkB,KAAlB,IAA2BV,KAAKW,EAAL,KAAY,eAAvC,IAA0DX,KAAKY,YAAL,CAAkB,gBAAlB,MAAwC,KAAK9C,cAA3G,EAA2H;AACzHuC,mBAAOQ,WAAP,CAAmBb,IAAnB;AACAM,qBAAU,IAAIQ,SAAJ,EAAD,CAAkBC,eAAlB,CAAkCZ,SAAlC,EAA6C,UAA7C,EAAyDa,UAAlE;AACAV,mBAAOW,YAAP,CAAoB,gBAApB,EAAsC,KAAKnD,cAA3C;AACAuC,mBAAO5B,WAAP,CAAmB6B,MAAnB;AACD;AACF,SARD,MAQO,IAAIN,KAAKU,QAAL,KAAkB,KAAlB,IAA2BV,KAAKW,EAAL,KAAY,eAA3C,EAA4D;AACjE;AACAN,iBAAOQ,WAAP,CAAmBb,IAAnB;AACAK,iBAAO5B,WAAP,CAAoB,IAAIqC,SAAJ,EAAD,CAAkBC,eAAlB,CAAkCb,SAAlC,EAA6C,UAA7C,EAAyDc,UAA5E;AACD;;AAED;AACA,aAAKR,YAAL,GAAoB,IAAIU,gBAAJ,CAAqB,YAAM;AAC7C,gBAAKtC,SAAL;AACD,SAFmB,CAApB;AAGA,aAAK4B,YAAL,CAAkBW,OAAlB,CAA0Bd,MAA1B,EAAkC;AAChCe,qBAAW,IADqB;AAEhCC,sBAAY,IAFoB;AAGhCC,mBAAS;AAHuB,SAAlC;AAKD,OA9BD,MA8BO;AACL;AACAC,mBAAW,KAAK3C,SAAhB,EAA2B,EAA3B;AACD;AACF;;;yCAEoB;AACnB;AACA,UAAI4C,SAAStE,UAAb;AACA,cAAQ,KAAKgB,IAAb;AACE,aAAKH,YAAYI,KAAZ,CAAkBC,IAAvB;AACEoD,oBAAUlE,QAAV;AACA;AACF,aAAKS,YAAYI,KAAZ,CAAkBsD,cAAvB;AACED,oBAAUnE,aAAV;AACA;AACF;AACE;AARJ;AAUA,WAAKgB,YAAL,CAAkBqD,SAAlB,GAA8B,KAAKC,gBAAL,CAAsBH,MAAtB,CAA9B;AACD;;;0BAEKI,S,EAAWC,O,EAAS;AACxB,aAAO,qBAAMD,SAAN,EAAiBE,OAAjB,CAAyBD,OAAzB,EAAkCE,SAAlC,EAAP;AACD;;;4BAEOH,S,EAAWI,U,EAAY;AAC7B,aAAO,qBAAMJ,SAAN,EAAiBK,MAAjB,CAAwBD,UAAxB,EAAoCD,SAApC,EAAP;AACD;;;6BAEQH,S,EAAW;AAClB,UAAMM,MAAM,qBAAMN,SAAN,EAAiBM,GAAjB,EAAZ;AACA,aAAO,qBAAM;AACXC,WAAG,MAAMD,IAAIC,CADF;AAEXC,WAAG,MAAMF,IAAIE,CAFF;AAGXC,WAAG,MAAMH,IAAIG;AAHF,OAAN,EAIJN,SAJI,EAAP;AAKD;;;qCAEgBO,W,EAAa;AAAA;;AAC5B,aAAOA,YACJlC,OADI,CACI,mBADJ,EACyB,KAAK1C,YAD9B,EAEJ0C,OAFI,CAEI,qBAFJ,EAE2B,KAAKzC,cAFhC,EAGJyC,OAHI,CAGI,qBAHJ,EAG2B,KAAKxC,cAHhC,EAIJwC,OAJI,CAII,mBAJJ,EAIyB,KAAKvC,YAJ9B,EAKJuC,OALI,CAKI,qBALJ,EAK2B,KAAKtC,cALhC,EAMJsC,OANI,CAMI,8CANJ,EAMoD,UAACmC,CAAD,EAAIC,CAAJ,EAAOC,WAAP;AAAA,eAAuB,OAAKC,OAAL,CAAaD,WAAb,EAA0BE,WAAWH,CAAX,CAA1B,CAAvB;AAAA,OANpD,EAOJpC,OAPI,CAOI,4CAPJ,EAOkD,UAACmC,CAAD,EAAIC,CAAJ,EAAOC,WAAP;AAAA,eAAuB,OAAKG,KAAL,CAAWH,WAAX,EAAwBE,WAAWH,CAAX,CAAxB,CAAvB;AAAA,OAPlD,EAQJpC,OARI,CAQI,gCARJ,EAQsC,UAACmC,CAAD,EAAIE,WAAJ;AAAA,eAAoB,OAAKI,QAAL,CAAcJ,WAAd,CAApB;AAAA,OARtC,EASJrC,OATI,CASI,8BATJ,EASoC,EATpC,CAAP;AAUD;;;;;;AA5KGrC,W,CACGI,K,GAAQ;AACbC,QAAM,MADO;AAEbqD,kBAAgB;AAFH,C;;;AA8KjBqB,OAAOC,OAAP,GAAiBhF,WAAjB","file":"gmusic-theme.js","sourcesContent":["import color from 'color';\n\nconst fs = require('fs');\n\n// DEV: These constants will be transformed into string constants by browserify\nconst COMMON_CSS = fs.readFileSync(`${__dirname}/../build/common.css`, 'utf8');\nconst HIGHLIGHT_CSS = fs.readFileSync(`${__dirname}/../build/highlight.css`, 'utf8');\nconst FULL_CSS = fs.readFileSync(`${__dirname}/../build/full.css`, 'utf8');\nconst BASE_SVG = fs.readFileSync(`${__dirname}/../lib/logo.svg`, 'utf8');\nconst CONSTANTS = require('../lib/_constants');\n\nconst DEFAULTS = {\n  BACK_PRIMARY: '#222326',\n  BACK_SECONDARY: '#121314',\n  BACK_HIGHLIGHT: '#615F59', // #1a1b1d\n  FORE_PRIMARY: '#FFFFFF',\n  FORE_SECONDARY: '#FF5722',\n};\n\nclass GMusicTheme {\n  static TYPES = {\n    FULL: 'FULL',\n    HIGHLIGHT_ONLY: 'HIGHLIGHT_ONLY',\n  };\n\n  /**\n   * Constructor for a new Google Music Theme API.\n   *\n   * @param  {Object} - A colors object containing `backPrimary`, `backSecondary`,\n   *                    `backHighlight`, `forePrimary`, `foreSecondary` attributes\n   *                    any attribute not included will not be overriden\n   */\n  constructor(options = {}) {\n    // DEV: Use the colors specified in the options or the default if it isn't set\n    this.BACK_PRIMARY = DEFAULTS.BACK_PRIMARY;\n    this.BACK_SECONDARY = DEFAULTS.BACK_SECONDARY;\n    this.BACK_HIGHLIGHT = DEFAULTS.BACK_HIGHLIGHT;\n    this.FORE_PRIMARY = DEFAULTS.FORE_PRIMARY;\n    this.FORE_SECONDARY = DEFAULTS.FORE_SECONDARY;\n    this.enabled = options.enabled || false;\n    this.type = GMusicTheme.TYPES.FULL;\n\n    // DEV: This is the style element where we put our custom CSS\n    this.styleElement = document.createElement('style');\n    document.body.appendChild(this.styleElement);\n\n    // DEV: updateTheme calls redrawTheme\n    this.updateTheme(options);\n  }\n\n  /**\n   * Regenerates the custom CSS and and updates the SVG logo\n   */\n  redrawTheme() {\n    this._refreshStyleSheet();\n    this._drawLogo();\n\n    // DEV: Add / Remove appropriate classes\n    if (this.enabled) {\n      document.documentElement.classList.add(CONSTANTS.CLASS_NAMESPACE);\n    } else {\n      document.documentElement.classList.remove(CONSTANTS.CLASS_NAMESPACE);\n    }\n  }\n\n  /**\n  * Enabled the custom theme\n  */\n  enable() {\n    this.enabled = true;\n    this.redrawTheme();\n  }\n\n  /**\n   * Disables the custom theme\n   */\n  disable() {\n    this.enabled = false;\n    this.redrawTheme();\n  }\n\n  /**\n   * Updates the custom colors used in the theme and redraws the custom CSS\n   *\n   * @param  {Object} - A colors object containing `backPrimary`, `backSecondary`,\n   *                    `backHighlight`, `forePrimary`, `foreSecondary` attributes\n   *                    any attribute not included will not be overriden\n   */\n  updateTheme(colorObject) {\n    // DEV: Validate the updateTheme type\n    if (colorObject.type !== undefined && GMusicTheme.TYPES[colorObject.type] === undefined) {\n      const validTypesStr = JSON.stringify(Object.keys(GMusicTheme.TYPES));\n      throw new Error(`\\`updateTheme\\` expected \\`colorObject.type\\` to be in ${validTypesStr}\n        but it was \"${colorObject.type}\"`);\n    }\n    this.BACK_PRIMARY = colorObject.backPrimary || this.BACK_PRIMARY;\n    this.BACK_SECONDARY = colorObject.backSecondary || this.BACK_SECONDARY;\n    this.BACK_HIGHLIGHT = colorObject.backHighlight || this.BACK_HIGHLIGHT;\n    this.FORE_PRIMARY = colorObject.forePrimary || this.FORE_PRIMARY;\n    this.FORE_SECONDARY = colorObject.foreSecondary || this.FORE_SECONDARY;\n    this.type = colorObject.type || this.type;\n    this.redrawTheme();\n  }\n\n  _drawLogo() {\n    const logo = document.querySelectorAll('.menu-logo')[0];\n    const normalSVG = BASE_SVG;\n    const customSVG = normalSVG.replace('#EE6B00', this.FORE_SECONDARY).replace('id=\"normalSVGIcon\"', 'id=\"customSVGIcon\"');\n    let parent;\n    let tmpSVG;\n\n    if (logo) {\n      parent = logo.parentNode;\n      if (this.logoObserver) {\n        this.logoObserver.disconnect();\n        delete this.logoObserver;\n      }\n\n      if (this.enabled) {\n        // DEV: Only update the SVG element if we need to\n        if (logo.nodeName === 'IMG' || logo.id === 'normalSVGIcon' || logo.getAttribute('current-custom') !== this.FORE_SECONDARY) {\n          parent.removeChild(logo);\n          tmpSVG = (new DOMParser()).parseFromString(customSVG, 'text/xml').firstChild;\n          tmpSVG.setAttribute('current-custom', this.FORE_SECONDARY);\n          parent.appendChild(tmpSVG);\n        }\n      } else if (logo.nodeName === 'IMG' || logo.id === 'customSVGIcon') {\n        // DEV: Only update the SVG element if we need to\n        parent.removeChild(logo);\n        parent.appendChild((new DOMParser()).parseFromString(normalSVG, 'text/xml').firstChild);\n      }\n\n      // DEV: Google sometimes changes its logo by itself, we need to monitor this\n      this.logoObserver = new MutationObserver(() => {\n        this._drawLogo();\n      });\n      this.logoObserver.observe(parent, {\n        childList: true,\n        attributes: true,\n        subtree: true,\n      });\n    } else {\n      // DEV: If the logo isn't ready yet wait a few milliseconds and try again\n      setTimeout(this._drawLogo, 10);\n    }\n  }\n\n  _refreshStyleSheet() {\n    // DEV: Take the current style string and put it in the style element in the DOM)\n    let styles = COMMON_CSS;\n    switch (this.type) {\n      case GMusicTheme.TYPES.FULL:\n        styles += FULL_CSS;\n        break;\n      case GMusicTheme.TYPES.HIGHLIGHT_ONLY:\n        styles += HIGHLIGHT_CSS;\n        break;\n      default:\n        break;\n    }\n    this.styleElement.innerHTML = this.substituteColors(styles);\n  }\n\n  _rgba(colorCode, opacity) {\n    return color(colorCode).clearer(opacity).rgbString();\n  }\n\n  _darken(colorCode, percentage) {\n    return color(colorCode).darken(percentage).rgbString();\n  }\n\n  _inverse(colorCode) {\n    const rgb = color(colorCode).rgb();\n    return color({\n      r: 255 - rgb.r,\n      g: 255 - rgb.g,\n      b: 255 - rgb.b,\n    }).rgbString();\n  }\n\n  substituteColors(styleString) {\n    return styleString\n      .replace(/<<BACK_PRIMARY>>/g, this.BACK_PRIMARY)\n      .replace(/<<BACK_SECONDARY>>/g, this.BACK_SECONDARY)\n      .replace(/<<BACK_HIGHLIGHT>>/g, this.BACK_HIGHLIGHT)\n      .replace(/<<FORE_PRIMARY>>/g, this.FORE_PRIMARY)\n      .replace(/<<FORE_SECONDARY>>/g, this.FORE_SECONDARY)\n      .replace(/<<DARKEN ([01]+.?[0-9]*)>>(.+?)<<\\/DARKEN>>/g, (s, n, colorString) => this._darken(colorString, parseFloat(n)))\n      .replace(/<<ALPHA ([01]+.?[0-9]*)>>(.+?)<<\\/ALPHA>>/g, (s, n, colorString) => this._rgba(colorString, parseFloat(n)))\n      .replace(/<<INVERSE>>(.+?)<<\\/INVERSE>>/g, (s, colorString) => this._inverse(colorString))\n      .replace(/<<NOTIMPORTANT>> !important/g, '');\n  }\n}\n\nmodule.exports = GMusicTheme;\n"]}